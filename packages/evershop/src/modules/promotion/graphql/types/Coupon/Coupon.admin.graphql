extend type Coupon  {
  usedTime: Int
  targetProducts: TargetProducts
  condition: OrderCondition
  userCondition: UserCondition
  buyxGety: [ByXGetY]
  maxUsesTimePerCoupon: Int
  maxUsesTimePerCustomer: Int
  editUrl: String!
  updateApi: String!
  deleteApi: String!
}

"""
Represents a single product used in the condition of a coupon.
"""
type MatchProductFilter {
  key: String!
  operator: String!
  value: JSON
  qty: String
}

"""
Represents the target products of a coupon.
"""
type TargetProducts {
  maxQty: String
  products: [MatchProductFilter]
}

"""
Represents the condition of a coupon.
"""
type OrderCondition {
  orderTotal: String
  orderQty: String
  requiredProducts: [MatchProductFilter]
}

"""
Represents the buy x get y condition of a coupon.
"""
type ByXGetY {
  sku: String!
  buyQty: String
  getQty: String
  maxY: String
  discount: String
}

type AdminCouponCollection {
  adminItems: [Coupon]
  currentPage: Int
  total: Int
  currentFilters: [Filter]
}

"""
Represents the user condition of a coupon.
"""
type UserCondition {
  groups: [String]
  emails: String
  purchased: String
}

extend type Query {
  coupons(filters: [FilterInput]): AdminCouponCollection
}