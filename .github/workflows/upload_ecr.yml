name: Publish to ECR

on:
  pull_request:
  push:
    branches: [master, develop, release/0.0.1]
env:
  ECR_REPOSITORY: ${{ vars.AWS_ECR_REPO }}
  ENV_S3_CONFIG: "${{github.ref == 'refs/heads/master' && 'production' || 'dev'}}"
jobs:
  build:
    name: Build and upload image
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Declare variables
        shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGIONS }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{env.sha_short}}
        run: |
          aws s3 cp --recursive s3://gohub-environments-files/evershop/${{env.ENV_S3_CONFIG}}/config config
          docker build -t gohub-ecommerce:latest -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest -f Dockerfile .
      - name: Push Image dev
        if: github.ref == 'refs/heads/develop'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{env.sha_short}}
        run: |
          docker tag gohub-ecommerce:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG-dev-latest
          docker tag gohub-ecommerce:latest $ECR_REGISTRY/$ECR_REPOSITORY:dev-latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG-dev-latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:dev-latest
      - name: Push Image production
        if: github.ref == 'refs/heads/master'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{env.sha_short}}
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
